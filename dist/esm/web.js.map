{"version":3,"file":"web.js","sourceRoot":"","sources":["../../src/web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,iBAAiB,CAAC;AAI5C,MAAM,OAAO,mBACX,SAAQ,SAAS;IAGjB,KAAK,CAAC,IAAI,CAAC,OAA0B;QACnC,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,gBAAgB;QACd,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC1C,CAAC;IAED,kBAAkB;QAChB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC1C,CAAC;IAED,sBAAsB;QACpB,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC1C,CAAC;IAED,aAAa;QACX,MAAM,IAAI,KAAK,CAAC,sBAAsB,CAAC,CAAC;IAC1C,CAAC;CACF","sourcesContent":["import { WebPlugin } from '@capacitor/core';\n\nimport type { BackgroundRunnerPlugin, PermissionStatus } from './definitions';\n\nexport class BackgroundRunnerWeb\n  extends WebPlugin\n  implements BackgroundRunnerPlugin\n{\n  async echo(options: { value: string }): Promise<{ value: string }> {\n    console.log('ECHO', options);\n    return options;\n  }\n\n  checkPermissions(): Promise<PermissionStatus> {\n    throw new Error('not available on web');\n  }\n\n  requestPermissions(): Promise<PermissionStatus> {\n    throw new Error('not available on web');\n  }\n\n  registerBackgroundTask(): Promise<void> {\n    throw new Error('not available on web');\n  }\n\n  dispatchEvent(): Promise<void> {\n    throw new Error('not available on web');\n  }\n}\n"]}